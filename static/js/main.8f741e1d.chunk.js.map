{"version":3,"sources":["Components/Tl/TlYear/TlYear.js","Components/Tl/TlYear/TlPrizes/TlPrizes.js","Components/Tl/TlYear/TlPrizes/TlCategory/TlCategory.js","Components/Tl/TlYear/TlPrizes/TlCategory/TlPriceWinner/TlPriceWinner.js","Components/Tl/Tl.js","Components/Tl/Pop/Pop.js","Components/Filters/FilterAge/FilterAge.js","Components/Filters/FilterFields/FilterFields.js","Components/Filters/FilterGender/FilterGender.js","Components/Filters/Filters.js","Components/App.js","serviceWorker.js","index.js"],"names":["TlYear","react_default","a","createElement","className","data-id","this","props","id","data-year","year","content","Component","TlPrizesList","TlCategory","TlPriceWinner","Timeline","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","generatePriceWinners","parent","i","j","map","pricewinner","k","dot","y","state","inc","rect","x","svg","h","prizeWinnersArr","push","TlCategory_TlPriceWinner_TlPriceWinner","key","concat","data","gender","data-age","age","data-coutry","coutry","data-field","field","data-gender","cx","cy","r","scaleOut","onMouseOver","e","dotMouseOver","onMouseOut","dotMouseOut","width","height","generateCategories","prizeList","category","length","totalLength","CategoriesArr","TlPrizes_TlCategory_TlCategory","generatePrizes","line","console","log","multiplier","prizesArr","TlPrizes","generateTimeline","Tl_TlYear_TlYear","react","x1","y1","x2","y2","dotMouse","wh","mouse","elt","target","infos","dataset","country","nodeDots","parentNode","querySelectorAll","dots","Array","from","childNodes","tagName","setAttribute","getCoords","parseInt","getAttribute","targettedId","mappedId","circleY","rectY","hover","scaleIn","w","FilterAge","renderAge","bool","type","min","max","placeholder","onChange","value","display","_this2","setState","checked","FilterFields","renderField","name","FilterGender","Filters","Filters_FilterAge_FilterAge","Filters_FilterFields_FilterFields","Filters_FilterGender_FilterGender","App","fetchData","Axios","get","params","headers","Access-Control-Allow-Origin","proxy","host","port","then","res","timeline","catch","err","UNSAFE_componentWillMount","Tl","Components_Filters_Filters","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f741e1d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TlYear extends Component {\n    render() {\n        return <g \n                className=\"year\" \n                data-id={this.props.id}\n                data-year={this.props.year}\n            >\n            {this.props.content}\n        </g>;\n    }\n}\n\nexport default TlYear;","import React, { Component } from 'react';\n\nclass TlPrizesList extends Component {\n    render() {\n        return <g className=\"prizesList\" data-id={this.props.id}>\n            {this.props.content}\n        </g>;\n    }\n}\n\nexport default TlPrizesList;","import React, { Component } from 'react';\n\nclass TlCategory extends Component {\n    render() {\n        return <g className=\"category\" data-id={this.props.id}>\n            {this.props.content}\n        </g>;\n    }\n}\n\nexport default TlCategory;","import { Component } from 'react';\n\nclass TlPriceWinner extends Component {\n    render() {\n        return this.props.content;\n    }\n}\n\nexport default TlPriceWinner;","import React, { Component, Fragment } from 'react';\n\nimport TlYear from './TlYear/TlYear';\nimport TlPrizes from './TlYear/TlPrizes/TlPrizes';\nimport TlCategory from './TlYear/TlPrizes/TlCategory/TlCategory';\nimport TlPriceWinner from './TlYear/TlPrizes/TlCategory/TlPriceWinner/TlPriceWinner'\nimport Pop from './Pop/Pop'\n\nclass Timeline extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            svg: {\n                w: 500,\n                h: 400\n            },\n            line: {\n                inc: 20,\n                multiplier: 20\n            },\n            dot: {\n                inc: 10,\n                hover: 10,\n                scaleIn: 10,\n                scaleOut: 5\n            },\n            rect: {\n                scaleIn: 16,\n                scaleOut: 8\n            },\n            \n        }\n        // total length of the timeline\n        this.totalLength = 0;\n        // array which'll contain the prize list \n        this.prizesArr = []\n        // array which'll contain all categories\n        this.CategoriesArr = []\n        // array which'll contain all prize winners of a category\n        this.prizeWinnersArr = [];\n        // line position\n        this.line = {\n            x: 0,\n            y: 0\n        }\n        // dot position\n        this.dot = {\n            x: this.line.x,\n            y: 0\n        }\n        this.rect = {\n            x: this.dot.x - 4,\n            y: (this.state.svg.h - this.dot.y) - 4\n        }\n\n        this.infos = {}\n    }\n    \n    // generation of price winners (dots)\n    generatePriceWinners = (parent, i, j) => parent.map((pricewinner, k) => {\n        // update the cdot y position by one dot incrementation\n        this.dot.y += this.state.dot.inc;\n        // push a <TlPriceWinner/> for each price winner\n        this.rect.x = this.dot.x - 4;\n        this.rect.y = (this.state.svg.h - this.dot.y) - 4;\n        return this.prizeWinnersArr.push(<TlPriceWinner \n            // unique key\n            key={`${i}${j}${k}`} \n            // the content is a SVG circle\n            content={pricewinner.data.gender ? <circle \n                className=\"dot\" \n                // unique id\n                data-id={`${i}${j}${k}`}\n                // category\n                data-age={pricewinner.data.age}\n                data-coutry={pricewinner.data.coutry}\n                data-field={pricewinner.data.field}\n                data-gender={pricewinner.data.gender}\n                // position\n                cx={this.dot.x}\n                cy={this.state.svg.h - this.dot.y}\n                // rayon\n                r={this.state.dot.scaleOut}\n                // mouse events\n                onMouseOver={(e) => this.dotMouseOver(e)}\n                onMouseOut={(e) => this.dotMouseOut(e)}\n            /> : <rect \n                className=\"dot\" \n                // unique id\n                data-id={`${i}${j}${k}`}\n                // category\n                data-age={pricewinner.data.age}\n                data-coutry={pricewinner.data.coutry}\n                data-field={pricewinner.data.field}\n                data-gender={pricewinner.data.gender}\n                width=\"8\"\n                height=\"8\"\n                x={this.rect.x}\n                y={this.rect.y}\n                onMouseOver={(e) => this.dotMouseOver(e)}\n                onMouseOut={(e) => this.dotMouseOut(e)}\n\n                // onMouseOver={(e) => this.rectMouseOver(e)}\n                // onMouseOut={(e) => this.rectMouseOut(e)}\n            />}\n        />);\n    })\n    // generation of categories (<g><TlPrizeWinner/></g>)\n    generateCategories = (parent, i) => parent.prizeList.map((category, j) => {\n        if (category.length !== 0) {\n            // increment the total length with each prize winners in a category length\n            this.totalLength += category.length;\n            // update the dot y position by one dot incrementation, again\n            this.dot.y += this.state.dot.inc;\n            // reset the prize winners array\n            this.prizeWinnersArr = [];\n            // call the above method\n            this.generatePriceWinners(category, i, j);\n        }\n        // push a <TlCategory/> for each category\n        return this.CategoriesArr.push(category.length !== 0 ? <TlCategory\n            // unique key & id\n            key={`${i}${j}`}\n            id={`${i}${j}`}\n            // the content is all the <TlPriceWinner/>\n            content={this.prizeWinnersArr}\n        /> : null)\n    })\n    // generation of all the prizes (<g><TlCategory/></g>)\n    generatePrizes = (parent, i) => {\n        // reset the total length\n        this.totalLength = 0;\n        // every line, the line y position is incremented by a line incrementation\n        this.line.x += this.state.line.inc;\n        console.log(\"eee\")\n        // reset the dots position\n        this.dot.x = this.line.x;\n        this.dot.y = 0;\n        // reset the categories array\n        this.CategoriesArr = [];\n        // call the above method\n        this.generateCategories(parent, i)\n        // reset the line y position\n        this.line.y = this.state.svg.h - this.totalLength * this.state.line.multiplier;\n        // push a <TlPrize/> for each prize\n        this.prizesArr.push(<TlPrizes \n            // unique key & id\n            key={i} \n            id={i}\n            // the content is all the <TlCategory/>\n            content={this.CategoriesArr}\n        />)\n    }\n    // generation of all the timeline\n    generateTimeline = () => this.props.data.map((year, i) => {\n        // reset the prizes array\n        this.prizesArr = [];\n        this.generatePrizes(year, i)\n        return (\n            // group all categories in a year\n            <TlYear \n                // unique key & id\n                key={i}\n                data-id={i}\n                year={year.year}\n                // the content is the line & all the <TlPrizes/>\n                content={<Fragment>\n                    <line \n                        // unique od\n                        data-id={i}\n                        // position\n                        x1={this.line.x} \n                        y1={this.line.y}\n                        x2={this.line.x} \n                        y2={this.state.svg.h} \n                    />\n                    {this.prizesArr}\n                </Fragment>}\n            />\n        )\n    })\n    // dot mouse events\n    dotMouse = (e, r, wh, mouse) => {\n        // get the current element\n        const elt = e.target\n        console.log(elt)\n        this.infos = {\n            age: elt.dataset.age,\n            country: elt.dataset.country,\n            field: elt.dataset.field,\n            gender: elt.dataset.gender,\n        }\n\n        // get the NodeList of all <circles> and <rect>\n        const nodeDots = elt.parentNode.parentNode.parentNode.querySelectorAll('.category');\n        // init the final array\n        const dots = [];\n        // get all the dots\n        Array.from(nodeDots).map(x => Array.from(x.childNodes).map(y => dots.push(y)));\n        // if the element is a circle, set 'r' atribute\n        if (elt.tagName === 'circle') elt.setAttribute('r', r);\n        // else, set x, y, width & height attribute\n        else {\n            // update coords in terms of mouse in or out\n            const getCoords = (e) => mouse ? (parseInt(elt.getAttribute(e)) - 4) : (parseInt(elt.getAttribute(e)) + 4);\n            const rect = {\n                x: getCoords('x'),\n                y: getCoords('y'),\n                width: wh,\n                height: wh\n            }\n            // set all attributes\n            for (const key in rect) elt.setAttribute(key, rect[key]);\n        }\n        // for all the dots\n        Array.from(dots).map((x) => {\n            // get the target id\n            const targettedId = elt.dataset.id;\n            // get the mapped id\n            const mappedId = x.dataset.id;\n            // get the y position of the mapped circle\n            let circleY = parseInt(x.getAttribute('cy'))\n            // get the y position of the mapped rect\n            let rectY = parseInt(x.getAttribute('y'))\n            // if the targetted dot is under the mapped dot\n            if (targettedId > mappedId) {\n                // if mouse is over, increment; if out, decrement\n                mouse ? circleY += this.state.dot.hover : circleY -= this.state.dot.hover\n                mouse ? rectY += this.state.dot.hover : rectY -= this.state.dot.hover;\n            }\n            // reverse logic\n            else if (targettedId < mappedId) { \n                mouse ? circleY -= this.state.dot.hover : circleY += this.state.dot.hover\n                mouse ? rectY -= this.state.dot.hover : rectY += this.state.dot.hover;\n            }\n            // set new y dot position, for circle & rect\n            x.setAttribute('cy', circleY)\n            x.setAttribute('y', rectY)   \n            return null;   \n        })\n    }\n    // when the mouse is on a dot\n    dotMouseOver = (e) => this.dotMouse(e, this.state.dot.scaleIn, this.state.rect.scaleIn, 1);\n    // when the mouse is over of a dot\n    dotMouseOut = (e) => this.dotMouse(e, this.state.dot.scaleOut, this.state.rect.scaleOut, 0);\n    render() {\n        // render a svg with all child Components\n        return <Fragment>\n            <svg \n                id=\"Timeline\"\n                width={this.state.svg.w}\n                height={this.state.svg.h}\n            >\n                {this.generateTimeline()}\n            </svg>\n            {/* <Pop data={this.infos}/> */}\n        </Fragment>\n    }\n}\n\nexport default Timeline;","import React, { Component } from 'react';\n\nclass Pop extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pos: {\n                x: window.innerWidth / 2,\n                y: window.innerHeight / 2\n            }\n        }\n    }\n\n    stick = () => window.onmousemove = (e) => {\n        this.setState({pos: {\n            x: e.clientX + 10,\n            y: e.clientY + 10\n            \n        }})\n        // console.log(this.props.data)\n    }\n\n    componentDidMount = () => this.stick()\n\n    render() {\n        return <div className=\"Pop\" style={{top: `${this.state.pos.y}px`, left: `${this.state.pos.x}px`}}>\n            <span></span>\n            <span>Field: {this.props.data.field}</span>\n            <span>Gender: {this.props.data.gender ? 'Man' : 'Woman'}</span>\n        </div>;\n    }\n}\n\nexport default Pop;\n","import React, { Component } from 'react';\n\nclass FilterAge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display: false\n        }\n    }\n    renderAge = (bool) => bool ? <input \n        type=\"number\"\n        min=\"20\"\n        max=\"72\"\n        placeholder=\"30\"\n        onChange={(e) => console.log(e.target.value)}\n    /> : null \n    render() {\n        return <div className=\"FilterAge\">\n            <h2>FilterAge</h2>\n            <input \n                type=\"checkbox\"\n                onChange={(e) => this.setState({display : e.target.checked})}    \n            />\n            {this.renderAge(this.state.display)}\n        </div>\n    }\n}\n\nexport default FilterAge;\n","import React, { Component } from 'react';\n\nclass FilterFields extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display: false\n        }\n    }\n    renderField = (bool) => bool ? <div>\n        <label>\n            <input type=\"checkbox\" name=\"fl1\" value=\"fl1\"/>Field 1\n            <input type=\"checkbox\" name=\"fl2\" value=\"fl2\"/>Field 2\n            <input type=\"checkbox\" name=\"fl3\" value=\"fl3\"/>Field 3\n            <input type=\"checkbox\" name=\"fl4\" value=\"fl4\"/>Field 4\n            <input type=\"checkbox\" name=\"fl5\" value=\"fl5\"/>Field 5\n            <input type=\"checkbox\" name=\"fl6\" value=\"fl6\"/>Field 6\n        </label>\n    </div> : null\n    render() {\n        return <div className=\"FilterFields\">\n            <h2>FilterFields</h2>\n            <input \n                type=\"checkbox\"\n                onChange={(e) => this.setState({display : e.target.checked})}    \n            />\n            {this.renderField(this.state.display)}\n        </div>\n    }\n}\n\nexport default FilterFields;\n","import React, { Component } from 'react';\n\nclass FilterGender extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display: false\n        }\n    }\n    renderField = (bool) => bool ? <div>\n        <label>\n            <input type=\"checkbox\" name=\"gd1\" value=\"gd1\"/>Man\n            <input type=\"checkbox\" name=\"gd2\" value=\"gd2\"/>Woman\n        </label>\n    </div> : null\n    render() {\n        return <div className=\"FilterGender\">\n            <h2>FilterGender</h2>\n            <input \n                type=\"checkbox\"\n                onChange={(e) => this.setState({display : e.target.checked})}    \n            />\n            {this.renderField(this.state.display)}\n        </div>\n    }\n}\n\nexport default FilterGender;\n","import React, { Component } from 'react';\nimport FilterAge from './FilterAge/FilterAge'\nimport FilterFields from './FilterFields/FilterFields'\nimport FilterGender from './FilterGender/FilterGender'\n\nclass Filters extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            age: {\n                display: false\n            }\n\n        }\n    }\n    \n    render() {\n        return <div className=\"Filters\" >\n            <h2>filters</h2>\n            <FilterAge/>\n            <FilterFields/>\n            <FilterGender/>\n        </div>;\n    }\n}\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nimport Tl from './Tl/Tl';\nimport Filters from './Filters/Filters'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeline: []\n        }\n    }\n    fetchData = () => {\n        Axios.get('./timeline.json', {\n            params: {\n                year: 1934\n            },\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            },\n            proxy: {\n                host: ' http://172.19.120.186',\n                port: 3000\n            }\n        })\n        .then(res => this.setState({ timeline: res.data}))\n        .catch(err => console.log(err))\n    }\n    // fetch the data when the component mounting\n    UNSAFE_componentWillMount = () => this.fetchData();\n    render() {\n        return <div className=\"App\">\n            <Tl data={this.state.timeline}/>\n            <Filters/>\n        </div>;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './Components/App';\nimport './scss/master.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}