{"version":3,"sources":["Components/Tl/TlYear/TlYear.js","Components/Tl/TlYear/TlPrizes/TlPrizes.js","Components/Tl/TlYear/TlPrizes/TlCategory/TlCategory.js","Components/Tl/TlYear/TlPrizes/TlCategory/TlPriceWinner/TlPriceWinner.js","Components/Tl/Pop/Pop.js","Components/Tl/Tl.js","Components/Filters/FilterAge/FilterAge.js","Components/Filters/FilterFields/FilterFields.js","Components/Filters/FilterGender/FilterGender.js","Components/Filters/Filters.js","Components/App.js","serviceWorker.js","index.js"],"names":["TlYear","react_default","a","createElement","className","data-id","this","props","id","data-year","year","content","Component","TlPrizesList","TlCategory","TlPriceWinner","Pop","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","stick","window","onmousemove","e","setState","pos","x","clientX","y","clientY","componentDidMount","state","innerWidth","innerHeight","style","top","concat","left","data","age","field","parseInt","gender","Timeline","generatePriceWinners","parent","i","j","map","pricewinner","k","dot","inc","rect","svg","h","prizeWinnersArr","push","TlCategory_TlPriceWinner_TlPriceWinner","key","data-age","data-coutry","coutry","data-field","data-gender","cx","cy","r","scaleOut","onMouseOver","dotMouseOver","onMouseOut","dotMouseOut","width","height","generateCategories","prizeList","category","length","totalLength","CategoriesArr","TlPrizes_TlCategory_TlCategory","generatePrizes","line","multiplier","prizesArr","TlPrizes","generateTimeline","Tl_TlYear_TlYear","react","x1","y1","x2","y2","resetTlParams","dotMouse","wh","mouse","elt","target","infos","dataset","country","nodeDots","parentNode","querySelectorAll","dots","Array","from","childNodes","tagName","setAttribute","getCoords","getAttribute","targettedId","mappedId","circleY","rectY","hover","scaleIn","w","Tl_Pop_Pop","FilterAge","renderAge","bool","type","min","max","placeholder","onChange","setAge","onChangeDisplay","display","checked","value","_this2","FilterFields","renderField","name","FilterGender","Filters","Filters_FilterAge_FilterAge","Filters_FilterFields_FilterFields","Filters_FilterGender_FilterGender","App","fetchData","Axios","get","params","headers","Access-Control-Allow-Origin","proxy","host","port","then","res","timeline","catch","err","console","log","UNSAFE_componentWillMount","objectSpread","setFields","setGender","Tl","Components_Filters_Filters","Boolean","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b81c240f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TlYear extends Component {\n    render() {\n        return <g \n                className=\"year\" \n                data-id={this.props.id}\n                data-year={this.props.year}\n            >\n            {this.props.content}\n        </g>;\n    }\n}\n\nexport default TlYear;","import React, { Component } from 'react';\n\nclass TlPrizesList extends Component {\n    render() {\n        return <g className=\"prizesList\" data-id={this.props.id}>\n            {this.props.content}\n        </g>;\n    }\n}\n\nexport default TlPrizesList;","import React, { Component } from 'react';\n\nclass TlCategory extends Component {\n    render() {\n        return <g className=\"category\" data-id={this.props.id}>\n            {this.props.content}\n        </g>;\n    }\n}\n\nexport default TlCategory;","import { Component } from 'react';\n\nclass TlPriceWinner extends Component {\n    render() {\n        return this.props.content;\n    }\n}\n\nexport default TlPriceWinner;","import React, { Component } from 'react';\n\nclass Pop extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pos: {\n                x: window.innerWidth / 2,\n                y: window.innerHeight / 2\n            }\n        }\n    }\n\n    stick = () => window.onmousemove = (e) => {\n        this.setState({pos: {\n            x: e.clientX + 10,\n            y: e.clientY - 100\n            \n        }})\n    }\n\n    componentDidMount = () => this.stick()\n\n    render() {\n        return <div className=\"Pop\" style={{top: `${this.state.pos.y}px`, left: `${this.state.pos.x}px`}}>\n            <p>Age: <span>{this.props.data.age}</span></p>\n            <p>Field: <span>{this.props.data.field}</span></p>\n            <p>Gender: <span>{parseInt(this.props.data.gender) ===  1 ? 'Woman' : 'Man'}</span></p>\n        </div>;\n    }\n}\n\nexport default Pop;\n","import React, { Component, Fragment } from 'react';\n\nimport TlYear from './TlYear/TlYear';\nimport TlPrizes from './TlYear/TlPrizes/TlPrizes';\nimport TlCategory from './TlYear/TlPrizes/TlCategory/TlCategory';\nimport TlPriceWinner from './TlYear/TlPrizes/TlCategory/TlPriceWinner/TlPriceWinner'\nimport Pop from './Pop/Pop'\n\nclass Timeline extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            svg: {\n                w: 500,\n                h: 400\n            },\n            line: {\n                inc: 20,\n                multiplier: 20\n            },\n            dot: {\n                inc: 10,\n                hover: 10,\n                scaleIn: 10,\n                scaleOut: 5\n            },\n            rect: {\n                scaleIn: 16,\n                scaleOut: 8\n            },\n            infos: {\n\n            }\n            \n        }\n        // total length of the timeline\n        this.totalLength = 0;\n        // array which'll contain the prize list \n        this.prizesArr = []\n        // array which'll contain all categories\n        this.CategoriesArr = []\n        // array which'll contain all prize winners of a category\n        this.prizeWinnersArr = [];\n        // line position\n        this.line = {\n            x: 0,\n            y: 0\n        }\n        // dot position\n        this.dot = {\n            x: this.line.x,\n            y: 0\n        }\n        this.rect = {\n            x: this.dot.x - 4,\n            y: (this.state.svg.h - this.dot.y) - 4\n        }\n\n    }\n    \n    // generation of price winners (dots)\n    generatePriceWinners = (parent, i, j) => parent.map((pricewinner, k) => {\n        // update the cdot y position by one dot incrementation\n        this.dot.y += this.state.dot.inc;\n        // push a <TlPriceWinner/> for each price winner\n        this.rect.x = this.dot.x - 4;\n        this.rect.y = (this.state.svg.h - this.dot.y) - 4;\n        return this.prizeWinnersArr.push(<TlPriceWinner \n            // unique key\n            key={`${i}${j}${k}`} \n            // the content is a SVG circle\n            content={pricewinner.data.gender ? <circle \n                className=\"dot\" \n                // unique id\n                data-id={`${i}${j}${k}`}\n                // category\n                data-age={pricewinner.data.age}\n                data-coutry={pricewinner.data.coutry}\n                data-field={pricewinner.data.field}\n                data-gender={pricewinner.data.gender}\n                // position\n                cx={this.dot.x}\n                cy={this.state.svg.h - this.dot.y}\n                // rayon\n                r={this.state.dot.scaleOut}\n                // mouse events\n                onMouseOver={(e) => this.dotMouseOver(e)}\n                onMouseOut={(e) => this.dotMouseOut(e)}\n            /> : <rect \n                className=\"dot\" \n                // unique id\n                data-id={`${i}${j}${k}`}\n                // category\n                data-age={pricewinner.data.age}\n                data-coutry={pricewinner.data.coutry}\n                data-field={pricewinner.data.field}\n                data-gender={pricewinner.data.gender}\n                width=\"8\"\n                height=\"8\"\n                x={this.rect.x}\n                y={this.rect.y}\n                onMouseOver={(e) => this.dotMouseOver(e)}\n                onMouseOut={(e) => this.dotMouseOut(e)}\n            />}\n        />);\n    })\n    // generation of categories (<g><TlPrizeWinner/></g>)\n    generateCategories = (parent, i) => parent.prizeList.map((category, j) => {\n        if (category.length !== 0) {\n            // increment the total length with each prize winners in a category length\n            this.totalLength += category.length;\n            // update the dot y position by one dot incrementation, again\n            this.dot.y += this.state.dot.inc;\n            // reset the prize winners array\n            this.prizeWinnersArr = [];\n            // call the above method\n            this.generatePriceWinners(category, i, j);\n        }\n        // push a <TlCategory/> for each category\n        return this.CategoriesArr.push(category.length !== 0 ? <TlCategory\n            // unique key & id\n            key={`${i}${j}`}\n            id={`${i}${j}`}\n            // the content is all the <TlPriceWinner/>\n            content={this.prizeWinnersArr}\n        /> : null)\n    })\n    // generation of all the prizes (<g><TlCategory/></g>)\n    generatePrizes = (parent, i) => {\n        // reset the total length\n        this.totalLength = 0;\n        // every line, the line y position is incremented by a line incrementation\n        this.line.x += this.state.line.inc;\n        // reset the dots position\n        this.dot.x = this.line.x;\n        this.dot.y = 0;\n        // reset the categories array\n        this.CategoriesArr = [];\n        // call the above method\n        this.generateCategories(parent, i)\n        // reset the line y position\n        this.line.y = this.state.svg.h - this.totalLength * this.state.line.multiplier;\n        // push a <TlPrize/> for each prize\n        this.prizesArr.push(<TlPrizes \n            // unique key & id\n            key={i} \n            id={i}\n            // the content is all the <TlCategory/>\n            content={this.CategoriesArr}\n        />)\n    }\n    // generation of all the timeline\n    generateTimeline = () => this.props.data.map((year, i) => {\n        // reset the prizes array\n        this.prizesArr = [];\n        this.generatePrizes(year, i)\n        return (\n            // group all categories in a year\n            <TlYear \n                // unique key & id\n                key={i}\n                data-id={i}\n                year={year.year}\n                // the content is the line & all the <TlPrizes/>\n                content={<Fragment>\n                    <line \n                        // unique od\n                        data-id={i}\n                        // position\n                        x1={this.line.x} \n                        y1={this.line.y}\n                        x2={this.line.x} \n                        y2={this.state.svg.h} \n                    />\n                    {this.prizesArr}\n                </Fragment>}\n            />\n        )\n    })\n    resetTlParams = () => {\n        // line position\n        this.line = {\n            x: 0,\n            y: 0\n        }\n    }\n    // dot mouse events\n    dotMouse = (e, r, wh, mouse) => {\n        // get the current element\n        const elt = e.target\n\n        this.setState({infos: {\n            age: elt.dataset.age,\n            country: elt.dataset.country,\n            field: elt.dataset.field,\n            gender: elt.dataset.gender,\n        }});\n\n        // get the NodeList of all <circles> and <rect>\n        const nodeDots = elt.parentNode.parentNode.parentNode.querySelectorAll('.category');\n        // init the final array\n        const dots = [];\n        // get all the dots\n        Array.from(nodeDots).map(x => Array.from(x.childNodes).map(y => dots.push(y)));\n        // if the element is a circle, set 'r' atribute\n        if (elt.tagName === 'circle') elt.setAttribute('r', r);\n        // else, set x, y, width & height attribute\n        else {\n            // update coords in terms of mouse in or out\n            const getCoords = (e) => mouse ? (parseInt(elt.getAttribute(e)) - 4) : (parseInt(elt.getAttribute(e)) + 4);\n            const rect = {\n                x: getCoords('x'),\n                y: getCoords('y'),\n                width: wh,\n                height: wh\n            }\n            // set all attributes\n            for (const key in rect) elt.setAttribute(key, rect[key]);\n        }\n        // for all the dots\n        Array.from(dots).map((x) => {\n            // get the target id\n            const targettedId = elt.dataset.id;\n            // get the mapped id\n            const mappedId = x.dataset.id;\n            // get the y position of the mapped circle\n            let circleY = parseInt(x.getAttribute('cy'))\n            // get the y position of the mapped rect\n            let rectY = parseInt(x.getAttribute('y'))\n            // if the targetted dot is under the mapped dot\n            if (targettedId > mappedId) {\n                // if mouse is over, increment; if out, decrement\n                mouse ? circleY += this.state.dot.hover : circleY -= this.state.dot.hover\n                mouse ? rectY += this.state.dot.hover : rectY -= this.state.dot.hover;\n            }\n            // reverse logic\n            else if (targettedId < mappedId) { \n                mouse ? circleY -= this.state.dot.hover : circleY += this.state.dot.hover\n                mouse ? rectY -= this.state.dot.hover : rectY += this.state.dot.hover;\n            }\n            // set new y dot position, for circle & rect\n            x.setAttribute('cy', circleY)\n            x.setAttribute('y', rectY)   \n            // document.querySelector('.Pop').style.opacity = mouse ? 1 : 0\n            return null;   \n        })\n    }\n    // when the mouse is on a dot\n    dotMouseOver = (e) => this.dotMouse(e, this.state.dot.scaleIn, this.state.rect.scaleIn, 1);\n    // when the mouse is over of a dot\n    dotMouseOut = (e) => this.dotMouse(e, this.state.dot.scaleOut, this.state.rect.scaleOut, 0);\n    render() {\n        // render a svg with all child Components\n        return <Fragment>\n            <svg \n                id=\"Timeline\"\n                width={this.state.svg.w}\n                height={this.state.svg.h}\n            >\n                {this.resetTlParams()}\n                {this.generateTimeline()}\n            </svg>\n            <Pop data={this.state.infos}/>\n        </Fragment>\n    }\n}\n\nexport default Timeline;","import React, { Component } from 'react';\n\nclass FilterAge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display: false,\n            value: null\n        }\n    }\n    renderAge = (bool) => bool ? <input \n        type=\"number\"\n        min=\"20\"\n        max=\"72\"\n        placeholder=\"30\"\n        onChange={(e) => this.props.setAge(e)}\n    /> : null \n    onChangeDisplay = (e) => {\n        this.setState({\n            display : e.target.checked,\n            value: null\n        })\n    }\n    render() {\n        return <div className=\"FilterAge\">\n            <h2>FilterAge</h2>\n            <input \n                type=\"checkbox\"\n                onChange={(e) => this.onChangeDisplay(e)}    \n            />\n            {this.renderAge(this.state.display)}\n        </div>\n    }\n}\n\nexport default FilterAge;\n","import React, { Component } from 'react';\n\nclass FilterFields extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display: false\n        }\n    }\n    renderField = (bool) => bool ? <div>\n        <label>\n            <input type=\"checkbox\" name=\"fl1\" value=\"fl1\"/>Field 1\n            <input type=\"checkbox\" name=\"fl2\" value=\"fl2\"/>Field 2\n            <input type=\"checkbox\" name=\"fl3\" value=\"fl3\"/>Field 3\n            <input type=\"checkbox\" name=\"fl4\" value=\"fl4\"/>Field 4\n            <input type=\"checkbox\" name=\"fl5\" value=\"fl5\"/>Field 5\n            <input type=\"checkbox\" name=\"fl6\" value=\"fl6\"/>Field 6\n        </label>\n    </div> : null\n    render() {\n        return <div className=\"FilterFields\">\n            <h2>FilterFields</h2>\n            <input \n                type=\"checkbox\"\n                onChange={(e) => this.setState({display : e.target.checked})}    \n            />\n            {this.renderField(this.state.display)}\n        </div>\n    }\n}\n\nexport default FilterFields;\n","import React, { Component } from 'react';\n\nclass FilterGender extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            display: false\n        }\n    }\n    renderField = (bool) => bool ? <div>\n        <label>\n            <input type=\"checkbox\" name=\"gd1\" value=\"gd1\"/>Man\n            <input type=\"checkbox\" name=\"gd2\" value=\"gd2\"/>Woman\n        </label>\n    </div> : null\n    render() {\n        return <div className=\"FilterGender\">\n            <h2>FilterGender</h2>\n            <input \n                type=\"checkbox\"\n                onChange={(e) => this.setState({display : e.target.checked})}    \n            />\n            {this.renderField(this.state.display)}\n        </div>\n    }\n}\n\nexport default FilterGender;\n","import React, { Component } from 'react';\nimport FilterAge from './FilterAge/FilterAge'\nimport FilterFields from './FilterFields/FilterFields'\nimport FilterGender from './FilterGender/FilterGender'\n\nclass Filters extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            age: {\n                display: false\n            }\n\n        }\n    }\n    \n    render() {\n        return <div className=\"Filters\" >\n            <h2>filters</h2>\n            <FilterAge\n                setAge={(e) => this.props.setAge(e)}\n            />\n            <FilterFields/>\n            <FilterGender/>\n        </div>;\n    }\n}\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nimport Tl from './Tl/Tl';\nimport Filters from './Filters/Filters'\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timeline: [],\n            params: {\n                age: null,\n                field: null,\n                gender: null\n            }\n        }\n    }\n    fetchData = () => {\n        Axios.get('./timeline.json', {\n            params: {\n                year: 1934\n            },\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            },\n            proxy: {\n                host: ' http://172.19.120.186',\n                port: 3000\n            }\n        })\n        .then(res => this.setState({ timeline: res.data}))\n        .catch(err => console.log(err))\n    }\n    // fetch the data when the component mounting\n    UNSAFE_componentWillMount = () => this.fetchData();\n    setAge = (e) => {\n        let params = {...this.state.params};\n        params.age = e.target.value;                        //updating value\n        this.setState({params}, () => console.log(\"ddd\"));\n    }\n    setFields = (e) => {\n\n    }\n    setGender = (e) => {\n\n    }\n    render() {\n        return <div className=\"App\">\n            <Tl data={this.state.timeline}/>\n            <Filters\n                setAge={(e) => this.setAge(e)}\n                setFields={(e) => this.setFields(e)}\n                setGender={(e) => this.setGender(e)}\n            />\n        </div>;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './Components/App';\nimport './scss/master.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}